using System;
namespace ImplementCustomStack
{
    public class CustomStack
    {

        private const int initialCapacity = 4;
        private int[] items;
        private int count;

        public CustomStack()
        {
            this.count = 0;
            this.items = new int[initialCapacity];

        }

        public int Count
        {
            get
            {
                return this.count;
            }
        }

        public void Push(int element)
        {
            if (this.items.Length == this.count)
            {
                Array.Resize(ref this.items, this.items.Length * 2);
            }
            this.items[this.count] = element;
            count++;
        }

        public int Pop()
        {
            if (this.items.Length == 0)
            {
                throw new InvalidOperationException("CustomStack is empty");
            }

            var lastItem = items[this.count - 1];
            items[this.count - 1] = 0;
            this.count = this.count - 1;

            return lastItem;
        }

        public int Peek()
        {
            var lastItem = items[this.count - 1];
            return lastItem;

        }

        public void ForEach(Action<object> action)
        {
            for (int i = 0; i < this.count; i++)
            {

                action(items[i]);

            }

        }
    }
}
